Write an algorithm which reverses the letters in words, like: 
Input: I love Taxify 
Output:I evol yfixaT
Input is character array (not string) and output should also be character array. Function needs to work in-place, modify the input array itself. Don't use any extra arrays, string objects or language provider libraries. Use of temporary variables is allowed.
Example in Java:
Input: char[] input = ['I', ' ', 'l','o','v','e',' ','T','a','x','i','f','y'];
public static char[] reverseWords(char [] input) {
	/** write your code here */
	return input;
}
Output: ['I', ' ', 'e','v','o','l',' ','y','f','i','x','a','T'];

Example is in Java, but choice of programming language is free. Please write the code in the web browser, don't test or run it in your IDE.
Extra: you will earn extra points if you write unit tests for this function.


public static char[] reverseWords(char [] input) {
        
        if (input == null || input.lenght < 1) {
            return "";
        }
        
        for (int i=0; i>=0; i++) {
            
            int letterCount = 0;
            
            if (input[i].equals(' ')) {

                
                for (int j=0; j <= letterCount; j++) {
                    
                    char x =  input[i-j]
                    char y =  input[i-(letterCount-j)]
                    
                    input[i-(letterCount-j)] = x
                     
                    input[i-j] = y
                    
                }
                
                letterCount = 0;
                
            }
            
            letterCounter++;
            
    
        }
    
        return input;
}

private Boolean shouldReturnTrueIfArrayWithWordsIsReversed() {
    
    char [] input = ['a', 'b', ' ','c','d'];
    
    char [] output = reverseWords(input);
    
    if (output[0].equals('b') &&
        output[1].equals('a') &&
        output[2].equals(' ') &&
        output[3].equals('d') &&
        output[4].equals('c')) {
            return true;
        }
        
    return false;    

}